<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.huatek.unicorn</groupId>
	<artifactId>vimgr</artifactId>
	<packaging>pom</packaging>
	<version>1.0</version>
	<!-- name>Huatek unicorn distributed service framework</name -->
	<description>
        RS distributed service framework
    </description>
	<inceptionYear>2016</inceptionYear>
	<organization>
		<name>RS</name>
		<url>http://www.huatek.com</url>
	</organization>
	<url>http://www.huatek.com</url>
	<properties>
		<file.encoding>UTF-8</file.encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<spring.version>4.2.5.RELEASE</spring.version>
		<zk.version>3.4.5</zk.version>
		<dubbo.version>2.5.3</dubbo.version>
	</properties>
	<modules>
		<!-- module>vimgr-parent</module -->
		<module>vimgr-biz</module>
		<module>vimgr-service-client</module>
		<module>vimgr-service-impl</module>
	</modules>

	<!-- 不同的打包环境 -->
	<profiles>
		<!-- production environment -->
		<profile>
			<id>production</id>
			<properties>
				<env>production</env>
			</properties>
		</profile>
		<!-- testing environment -->
		<profile>
			<id>test</id>
			<properties>
				<env>test</env>
			</properties>
		</profile>
		<!-- development environment -->
		<profile>
			<id>dev</id>
			<properties>
				<env>dev</env>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.zookeeper</groupId>
				<artifactId>zookeeper</artifactId>
				<version>${zk.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.3.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<filters>
			<filter>../filters/filter-${env}.properties</filter>
		</filters>
		<resources>
			<resource><!-- 不对指定的资源文件进行资源替换 -->
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.ftl</exclude>
					<exclude>**/*-dynamic.xml</exclude>
					<exclude>**/mybatis/**/*.xml</exclude>
				</excludes>
			</resource>
			<resource><!-- 对ftl文件和动态sql文件进行直接复制 -->
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.ftl</include>
					<include>**/*-dynamic.xml</include>
					<include>**/mybatis/**/*.xml</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.ftl</exclude>
					<exclude>**/*-dynamic.xml</exclude>
					<exclude>**/mybatis/**/*.xml</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.ftl</include>
					<include>**/*-dynamic.xml</include>
					<include>**/mybatis/**/*.xml</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>
			<!-- 工程编码插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 生成javadoc插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<charset>UTF-8</charset>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<!-- 打包java源码 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 导入eclipse工程插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
					<wtpversion>2.0</wtpversion>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<argLine>-Xms512m -Xmx1024m -XX:PermSize=128m -XX:MaxPermSize=128m</argLine>
					<includes>
						<include>com/haier/**/*Test*.java</include>
					</includes>
					<printSummary>true</printSummary>
				</configuration>
			</plugin>
			<!-- plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>cobertura-maven-plugin</artifactId> 
				<version>2.6</version> <configuration> <instrumentation> <excludes> <exclude>com/haier/**/action/**/*.class</exclude> 
				<exclude>com/haier/**/webapp/**/*.class</exclude> <exclude>com/haier/**/interceptor/**/*.class</exclude> 
				<exclude>com/haier/**/taglib/**/*.class</exclude> <exclude>com/haier/**/domain/**/*.class</exclude> 
				<exclude>com/haier/**/model/**/*.class</exclude> <exclude>com/haier/**/dto/**/*.class</exclude> 
				<exclude>com/haier/**/util/DataFormat.class</exclude> </excludes> </instrumentation> 
				<formats> <format>xml</format> </formats> </configuration> </plugin -->
		</plugins>
	</build>

	<!-- local maven repository begin -->
	<repositories>
		<repository>
			<id>nexus</id>
			<url>http://192.168.56.102:19999/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<url>http://192.168.56.102:19999/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<distributionManagement>
		<repository>
			<id>releases</id>
			<url>http://192.168.56.102:19999/nexus/content/repositories/releases</url>
		</repository>
		<snapshotRepository>
			<id>snapshots</id>
			<url>http://192.168.56.102:19999/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- local maven repository end -->
</project>